---
- name: "Checking the existence of Docker credentials"
  local_action: stat path={{ docker_cred_path }}
  register: f

- debug:
    msg: "Docker credentials found, performing login..."
  when: f.stat.exists

- debug:
    msg: "No Docker credentials found, skipping login..."
  when: f.stat.exists == False

- name: "Get Docker credentials"
  include_vars: "{{ docker_cred_path }}"
  when: f.stat.exists

- name: "Wait for the running state of ToscaSubmitter"
  shell: "i=0 ; while [ `docker ps --filter status=running --filter name=toscasubmitter | wc -l` -eq 1 ] && [ $i -lt 20 ] ; do echo -e 'ToscaSubmitter is not running yet!' ;  sleep 1 ; ((i++)) ; done ; if [ $i -eq 20 ] ; then exit 1 ; fi ; exit 0"
  args:
    executable: /bin/bash
  register: output
  changed_when: output.stdout != ""
  when: f.stat.exists

- name: "Store Docker Registry Key"
  command: "kubectl create secret docker-registry dockerloginkey --docker-server={{ DOCKER_REPO }} --docker-username={{ DOCKER_USER }} --docker-password={{ DOCKER_PASS }}"
  when: f.stat.exists

- name: "Update Service Account with Registry Key"
  command: "kubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"dockerloginkey\"}]}'"
  when: f.stat.exists